---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-sled-db
  labels:
    app: {{ .Release.Name }}-sled-db
spec:
  serviceName: {{ .Release.Name }}-sled-db
  replicas: {{ .Values.replicaDbCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-sled-db
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-sled-db
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '51805'
        prometheus.io/path: '/metrics'
    spec:
      containers:
      - name: cdl-sled-db
        image: "{{ .Values.global.imageRepositoryPath }}{{ .Values.documentStorage.image }}:{{ .Values.global.imageVersion }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        command: ["/bin/{{ .Values.documentStorage.bin }}"]
        env:
        - name: RUST_LOG
          value: "info,{{ .Values.documentStorage.bin }}=debug" 
        ports:
        - containerPort: 51805
        volumeMounts:
        - mountPath: "/var/data/datastore_rs"
          name: {{ .Release.Name }}-pv-sled
      imagePullSecrets:
      - name: {{ .Values.global.cdlImagePullSecrets }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Release.Name }}-pv-sled
    spec:
      storageClassName: {{ .Values.storageClass }}
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.maxDbSize }}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-sled-command-service
  labels:
    app: {{ .Release.Name }}-sled-command-service
    repository.type: document
    repository.name: sled
spec:
  replicas: {{ .Values.replicaCommandCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-sled-command-service
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-sled-command-service
        repository.type: document
        repository.name: sled
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '51805'
        prometheus.io/path: '/metrics'
    spec:
      containers:
      - name: cdl-sled-command-service
        image: "{{ .Values.global.imageRepositoryPath }}{{ .Values.commandService.image }}:{{ .Values.global.imageVersion }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        command: ["/bin/{{ .Values.commandService.bin }}","sleigh"]
        env:
        - name: KAFKA_INPUT_BROKERS
          value: {{ .Values.global.kafkaBrokers }}
        - name: KAFKA_INPUT_GROUP_ID
          value: "cdl-sled-command-service"
        - name: KAFKA_INPUT_TOPIC
          value: {{ .Values.inputTopic }}
        - name: SLEIGH_OUTPUT_ADDR
          value: "http://{{ .Release.Name }}-sled-db:58102"    
        - name: RUST_LOG
          value: "info,{{ .Values.commandService.bin }}=debug" 
        - name: REPORT_BROKER
          value: {{ .Values.global.kafkaBrokers }}
        - name: REPORT_TOPIC
          value: {{ .Values.global.reportTopic }}
        ports:
        - containerPort: 51805
  # TODO: Probes
      imagePullSecrets:
      - name: {{ .Values.global.cdlImagePullSecrets }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-sled-db
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}-sled-db
  ports:
    - port: 58102
      targetPort: 58102

